{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectShop = state => state.shop;\n\nexport const selectShopItems = createSelector([selectShop], shop => shop.collections);\nexport const selectCollection = collectionUrlParam => createSelector([selectShopItems], collections => collections ? collections[collectionUrlParam] : null);\nexport const selectCollectionsForPreview = createSelector([selectShopItems], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectIsCollectionFetching = createSelector([selectShop], shop => shop.isFetching);\nexport const selectIsCollectionLoaded = createSelector([selectShop], shop => !!shop.collections);","map":{"version":3,"sources":["/Users/donggon/Documents/github/crwn-clothing-react/client/src/redux/shop/shop.selector.js"],"names":["createSelector","selectShop","state","shop","selectShopItems","collections","selectCollection","collectionUrlParam","selectCollectionsForPreview","Object","keys","map","key","selectIsCollectionFetching","isFetching","selectIsCollectionLoaded"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAApC;;AAEA,OAAO,MAAMC,eAAe,GAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE1CE,IAAD,IAAUA,IAAI,CAACE,WAF4B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAIC,kBAAD,IAC9BP,cAAc,CAAC,CAACI,eAAD,CAAD,EAAqBC,WAAD,IAChCA,WAAW,GAAGA,WAAW,CAACE,kBAAD,CAAd,GAAqC,IADpC,CADT;AAKP,OAAO,MAAMC,2BAA2B,GAAGR,cAAc,CACvD,CAACI,eAAD,CADuD,EAEtDC,WAAD,IACEA,WAAW,GAAGI,MAAM,CAACC,IAAP,CAAYL,WAAZ,EAAyBM,GAAzB,CAA8BC,GAAD,IAASP,WAAW,CAACO,GAAD,CAAjD,CAAH,GAA6D,EAHnB,CAAlD;AAMP,OAAO,MAAMC,0BAA0B,GAAGb,cAAc,CACtD,CAACC,UAAD,CADsD,EAErDE,IAAD,IAAUA,IAAI,CAACW,UAFuC,CAAjD;AAKP,OAAO,MAAMC,wBAAwB,GAAGf,cAAc,CACpD,CAACC,UAAD,CADoD,EAEnDE,IAAD,IAAU,CAAC,CAACA,IAAI,CAACE,WAFmC,CAA/C","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectShop = (state) => state.shop;\n\nexport const selectShopItems = createSelector(\n  [selectShop],\n  (shop) => shop.collections\n);\n\nexport const selectCollection = (collectionUrlParam) =>\n  createSelector([selectShopItems], (collections) =>\n    collections ? collections[collectionUrlParam] : null\n  );\n\nexport const selectCollectionsForPreview = createSelector(\n  [selectShopItems],\n  (collections) =>\n    collections ? Object.keys(collections).map((key) => collections[key]) : []\n);\n\nexport const selectIsCollectionFetching = createSelector(\n  [selectShop],\n  (shop) => shop.isFetching\n);\n\nexport const selectIsCollectionLoaded = createSelector(\n  [selectShop],\n  (shop) => !!shop.collections\n);\n"]},"metadata":{},"sourceType":"module"}