{"ast":null,"code":"var _jsxFileName = \"/Users/donggon/Documents/github/crwn-clothing-react/src/pages/shop/shop.component.jsx\";\nimport React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport withSpinner from \"../../components/with-spinner/with-spinner.component\";\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { updateCollections } from \"../../redux/shop/shop.action\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst collectionsOverviewWithSpinner = withSpinner(CollectionOverview);\n\nclass Shop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubcribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n    this.unsubcribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        component: CollectionOverview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collectionId`,\n        component: CollectionPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);","map":{"version":3,"sources":["/Users/donggon/Documents/github/crwn-clothing-react/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","withSpinner","CollectionOverview","CollectionPage","updateCollections","firestore","convertCollectionsSnapshotToMap","collectionsOverviewWithSpinner","Shop","Component","state","loading","unsubcribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;;AAKA,MAAMC,8BAA8B,GAAGN,WAAW,CAACC,kBAAD,CAAlD;;AAEA,MAAMM,IAAN,SAAmBV,KAAK,CAACW,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCC,KADiC,GACzB;AACNC,MAAAA,OAAO,EAAE;AADH,KADyB;AAAA,SAIjCC,sBAJiC,GAIR,IAJQ;AAAA;;AAKjCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAET,MAAAA;AAAF,QAAwB,KAAKU,KAAnC;AACA,UAAMC,aAAa,GAAGV,SAAS,CAACW,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,sBAAL,GAA8BG,aAAa,CAACE,UAAd,CAAyB,MAAOC,QAAP,IAAoB;AACzE,YAAMC,cAAc,GAAGb,+BAA+B,CAACY,QAAD,CAAtD;AACAd,MAAAA,iBAAiB,CAACe,cAAD,CAAjB;AACD,KAH6B,CAA9B;AAKA,SAAKC,QAAL,CAAc;AAAET,MAAAA,OAAO,EAAE;AAAX,KAAd;AACD;;AACDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKR,KAAvB;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,SAAS,EAAErB;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAG,GAAEoB,KAAK,CAACC,IAAK,gBADtB;AAEE,QAAA,SAAS,EAAEpB;AAFb;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA3BgC;;AA8BnC,MAAMqB,kBAAkB,GAAIC,QAAD,KAAe;AACxCrB,EAAAA,iBAAiB,EAAGe,cAAD,IACjBM,QAAQ,CAACrB,iBAAiB,CAACe,cAAD,CAAlB;AAF8B,CAAf,CAA3B;;AAKA,eAAenB,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkChB,IAAlC,CAAf","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport withSpinner from \"../../components/with-spinner/with-spinner.component\";\n\nimport CollectionOverview from \"../../components/collections-overview/collections-overview.component\";\nimport CollectionPage from \"../collection/collection.component\";\nimport { updateCollections } from \"../../redux/shop/shop.action\";\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nconst collectionsOverviewWithSpinner = withSpinner(CollectionOverview);\n\nclass Shop extends React.Component {\n  state = {\n    loading: true,\n  };\n  unsubcribeFromSnapshot = null;\n  componentDidMount() {\n    const { updateCollections } = this.props;\n    const collectionRef = firestore.collection(\"collections\");\n\n    this.unsubcribeFromSnapshot = collectionRef.onSnapshot(async (snapshot) => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n\n    this.setState({ loading: false });\n  }\n  render() {\n    const { match } = this.props;\n    return (\n      <div className=\"shop-page\">\n        <Route exact path={`${match.path}`} component={CollectionOverview} />\n        <Route\n          path={`${match.path}/:collectionId`}\n          component={CollectionPage}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateCollections: (collectionsMap) =>\n    dispatch(updateCollections(collectionsMap)),\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);\n"]},"metadata":{},"sourceType":"module"}